{
  "name": "gitcomai",
  "displayName": "GitCom-AI",
  "description": "Generate commit messages using AI based on git diff",
  "version": "1.0.7",
  "engines": {
    "vscode": "^1.95.0"
  },
  "publisher": "ZaphkielIvanovna",
  "repository": "https://github.com/Zaphkiel-Ivanovna/git-com-ai",
  "icon": "images/logo.png",
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:gitcomai.generateCommitMessage"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gitcomai.generateCommitMessage",
        "title": "GitComAI: Generate Commit Message with AI",
        "icon": {
          "light": "resources/light/ai-commit.svg",
          "dark": "resources/dark/ai-commit.svg"
        }
      },
      {
        "command": "gitcomai.openConfig",
        "title": "GitComAI: Open Configuration"
      },
      {
        "command": "gitcomai.showLogs",
        "title": "GitComAI: Show Logs"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "gitcomai.generateCommitMessage",
          "group": "navigation",
          "when": "scmProvider == git"
        }
      ],
      "scm/inputBox": [
        {
          "command": "gitcomai.generateCommitMessage",
          "when": "scmProvider == git",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "gitcomai.openConfig",
          "when": "true"
        }
      ]
    },
    "configuration": {
      "title": "GitComAI",
      "properties": {
        "gitcomai.selectedModel": {
          "type": "object",
          "default": {
            "provider": "anthropic",
            "model": "claude-3-7-sonnet-latest"
          },
          "description": "The AI model to use for generating commit messages",
          "properties": {
            "provider": {
              "type": "string",
              "enum": [
                "anthropic",
                "openai",
                "mistral",
                "google",
                "ollama"
              ],
              "default": "anthropic",
              "description": "The AI provider to use"
            },
            "model": {
              "type": "string",
              "description": "The model to use from the selected provider"
            }
          }
        },
        "gitcomai.anthropicApiKey": {
          "type": "string",
          "default": "",
          "description": "API Key for Anthropic Claude"
        },
        "gitcomai.openaiApiKey": {
          "type": "string",
          "default": "",
          "description": "API Key for OpenAI"
        },
        "gitcomai.mistralApiKey": {
          "type": "string",
          "default": "",
          "description": "API Key for Mistral AI"
        },
        "gitcomai.googleApiKey": {
          "type": "string",
          "default": "",
          "description": "API Key for Google Gemini"
        },
        "gitcomai.ollamaBaseURL": {
          "type": "string",
          "default": "http://localhost:11434",
          "description": "Base URL for Ollama API (default: http://localhost:11434)"
        },
        "gitcomai.temperature": {
          "type": "number",
          "default": 0.2,
          "minimum": 0,
          "maximum": 1,
          "description": "Temperature for AI generation (0-1). Lower values make output more deterministic."
        },
        "gitcomai.maxTokens": {
          "type": "number",
          "default": 1000,
          "description": "Maximum number of tokens to generate"
        },
        "gitcomai.debug": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "build": "mkdir -p build & vsce package -o build/gitcomai-${npm_package_version}.vsix",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/vscode": "^1.95.0",
    "@typescript-eslint/eslint-plugin": "^8.30.1",
    "@typescript-eslint/parser": "^8.30.1",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.3.2",
    "eslint": "^9.24.0",
    "glob": "^11.0.1",
    "mocha": "^11.1.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.30.1",
    "webpack": "^5.99.5",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^1.2.10",
    "@ai-sdk/google": "^1.2.11",
    "@ai-sdk/mistral": "^1.2.7",
    "@ai-sdk/openai": "^1.3.16",
    "ai": "^4.3.9",
    "handlebars": "^4.7.8",
    "ollama": "^0.5.15",
    "ollama-ai-provider": "^1.2.0"
  },
  "packageManager": "pnpm@10.8.1"
}
