import { z } from 'zod';

const gitmojis = [
  '✨',
  '🐛',
  '♻️',
  '⚡️',
  '🚑️',
  '🩹',
  '🎨',
  '🔥',
  '🔒️',
  '⚰️',
  '♿️',
  '🚀',
  '📝',
  '✅',
  '🚨',
  '🔖',
  '🚧',
  '💄',
  '🏗️',
  '👷',
  '💚',
  '🔐',
  '📈',
  '🔧',
  '🔨',
  '📌',
  '➕',
  '➖',
  '📦️',
  '👽️',
  '🚚',
  '📄',
  '💥',
  '🍱',
  '💡',
  '🗃️',
  '🔊',
  '🔇',
  '🚸',
  '📱',
  '⚗️',
  '🏷️',
  '🌱',
  '🚩',
  '🥅',
  '💫',
  '🗑️',
  '🛂',
  '🩺',
  '🧱',
  '🧑‍💻',
  '💸',
  '🧵',
  '🦺',
  '🎉',
  '✏️',
  '💩',
  '⏪️',
  '🔀',
  '📸',
  '🤡',
  '🥚',
  '🙈',
  '🧐',
  '🔍️',
  '👥',
  '🍻',
] as const;

const types = [
  'feat',
  'fix',
  'refactor',
  'performance',
  'hotfix',
  'minor-fix',
  'style',
  'cleanup',
  'security',
  'pruning',
  'accessibility',
  'deployment',
  'docs',
  'testing',
  'lint',
  'versioning',
  'wip',
  'ui',
  'architecture',
  'ci',
  'ci-fix',
  'secrets',
  'analytics',
  'config',
  'dev-scripts',
  'dependency-pin',
  'dependency-add',
  'dependency-remove',
  'build',
  'external-api',
  'resource-move',
  'license',
  'breaking',
  'assets',
  'comments',
  'database',
  'logging',
  'log-removal',
  'ux',
  'responsive',
  'experiment',
  'types',
  'seeding',
  'feature-flag',
  'error-handling',
  'animations',
  'deprecation',
  'auth',
  'healthcheck',
  'infrastructure',
  'dev-experience',
  'sponsorship',
  'concurrency',
  'validation',
  'init',
  'typo',
  'bad-code',
  'revert',
  'merge',
  'snapshot',
  'mock',
  'easter-egg',
  '.gitignore',
  'exploration',
  'seo',
  'contributor',
  'drunk',
] as const;

export const commitBodyItemSchema = z
  .object({
    emoji: z.enum(gitmojis).describe('The emoji for this change'),
    type: z.enum(types).describe('The type of this change'),
    scope: z
      .string()
      .nullable()
      .describe('The scope of this change (optional)'),
    description: z
      .string()
      .describe('A short description of this change, max 74 chars'),
  })
  .required({
    emoji: true,
    scope: true,
    type: true,
    description: true,
  });

export const commitMessageSchema = z
  .object({
    emoji: z
      .enum(gitmojis)
      .describe('The emoji that represents the type of change'),
    type: z.enum(types).describe('The type of change'),
    scope: z.string().nullable().describe('The scope of the change (optional)'),
    description: z
      .string()
      .describe(
        'A short description in imperative mood, not exceeding 74 characters'
      ),
    body: z
      .array(commitBodyItemSchema)
      .optional()
      .describe('Optional additional details about the changes'),
  })
  .required({
    emoji: true,
    scope: true,
    type: true,
    description: true,
    body: true,
  });

export type ICommitBodyItem = z.infer<typeof commitBodyItemSchema>;
export type ICommitMessage = z.infer<typeof commitMessageSchema>;
